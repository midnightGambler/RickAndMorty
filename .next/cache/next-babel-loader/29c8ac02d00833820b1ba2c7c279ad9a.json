{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\hooks\\\\withApollo.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport withApollo from \"next-with-apollo\";\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nexport default withApollo(function (_ref) {\n  var initialState = _ref.initialState;\n  return new ApolloClient({\n    uri: \"https://rickandmortyapi.com/graphql\",\n    cache: new InMemoryCache().restore(initialState || {}),\n    clientState: {\n      defaults: {\n        locations: {\n          __typename: \"locations\",\n          locations: []\n        }\n      },\n      resolvers: {\n        Mutation: {\n          updateLocations: function updateLocations(_, _ref2, _ref3) {\n            var locations = _ref2.locations;\n            var cache = _ref3.cache;\n            cache.writeData({\n              data: {\n                locations: locations\n              }\n            });\n            return null;\n          }\n        }\n      }\n    }\n  });\n}, {\n  render: function render(_ref4) {\n    var Page = _ref4.Page,\n        props = _ref4.props;\n    return __jsx(ApolloProvider, {\n      client: props.apollo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(Page, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })));\n  }\n});","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/hooks/withApollo.js"],"names":["withApollo","ApolloClient","InMemoryCache","ApolloProvider","initialState","uri","cache","restore","clientState","defaults","locations","__typename","resolvers","Mutation","updateLocations","_","writeData","data","render","Page","props","apollo"],"mappings":";;;;AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,IAAuBC,aAAvB,QAA4C,cAA5C;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,eAAeH,UAAU,CACvB,gBAAsB;AAAA,MAAnBI,YAAmB,QAAnBA,YAAmB;AACpB,SAAO,IAAIH,YAAJ,CAAiB;AACtBI,IAAAA,GAAG,EAAE,qCADiB;AAEtBC,IAAAA,KAAK,EAAE,IAAIJ,aAAJ,GAAoBK,OAApB,CAA4BH,YAAY,IAAI,EAA5C,CAFe;AAGtBI,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,SAAS,EAAE;AACTC,UAAAA,UAAU,EAAE,WADH;AAETD,UAAAA,SAAS,EAAE;AAFF;AADH,OADC;AAOXE,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,eAAe,EAAE,yBAACC,CAAD,gBAAiC;AAAA,gBAA3BL,SAA2B,SAA3BA,SAA2B;AAAA,gBAAZJ,KAAY,SAAZA,KAAY;AAChDA,YAAAA,KAAK,CAACU,SAAN,CAAgB;AAAEC,cAAAA,IAAI,EAAE;AAAEP,gBAAAA,SAAS,EAATA;AAAF;AAAR,aAAhB;AACA,mBAAO,IAAP;AACD;AAJO;AADD;AAPA;AAHS,GAAjB,CAAP;AAoBD,CAtBsB,EAuBvB;AACEQ,EAAAA,MAAM,EAAE,uBAAqB;AAAA,QAAlBC,IAAkB,SAAlBA,IAAkB;AAAA,QAAZC,KAAY,SAAZA,KAAY;AAC3B,WACE,MAAC,cAAD;AAAgB,MAAA,MAAM,EAAEA,KAAK,CAACC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;AAPH,CAvBuB,CAAzB","sourcesContent":["import withApollo from \"next-with-apollo\";\r\nimport ApolloClient, { InMemoryCache } from \"apollo-boost\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nexport default withApollo(\r\n  ({ initialState }) => {\r\n    return new ApolloClient({\r\n      uri: \"https://rickandmortyapi.com/graphql\",\r\n      cache: new InMemoryCache().restore(initialState || {}),\r\n      clientState: {\r\n        defaults: {\r\n          locations: {\r\n            __typename: \"locations\",\r\n            locations: []\r\n          }\r\n        },\r\n        resolvers: {\r\n          Mutation: {\r\n            updateLocations: (_, { locations }, { cache }) => {\r\n              cache.writeData({ data: { locations } });\r\n              return null;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  },\r\n  {\r\n    render: ({ Page, props }) => {\r\n      return (\r\n        <ApolloProvider client={props.apollo}>\r\n          <Page {...props} />\r\n        </ApolloProvider>\r\n      );\r\n    }\r\n  }\r\n);\r\n"]},"metadata":{},"sourceType":"module"}