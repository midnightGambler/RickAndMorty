{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\location\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport Page from \"../../components/Page/Page\";\n\nconst QUERY = query => gql`\n{\n  location(id: ${query}) @client {\n    name\n    residents {\n      image\n    }\n  }\n}\n`;\n\nexport default (() => {\n  const {\n    query\n  } = useRouter();\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(QUERY(query));\n  console.log(data);\n  return __jsx(Page, {\n    breadcrumb: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, query.id), __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, query.id));\n});","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/location/[id].js"],"names":["useRouter","useQuery","Page","QUERY","query","gql","loading","data","error","console","log","id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAIC,GAAI;;iBAEVD,KAAM;;;;;;;CAFvB;;AAWA,gBAAe,MAAM;AACnB,QAAM;AAAEA,IAAAA;AAAF,MAAYJ,SAAS,EAA3B;AACA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BP,QAAQ,CAACE,KAAK,CAACC,KAAD,CAAN,CAAzC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,SACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACO,EAAX,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKP,KAAK,CAACO,EAAX,CAFF,CADF;AAMD,CAZD","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport Page from \"../../components/Page/Page\";\r\n\r\nconst QUERY = query => gql`\r\n{\r\n  location(id: ${query}) @client {\r\n    name\r\n    residents {\r\n      image\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport default () => {\r\n  const { query } = useRouter();\r\n  const { loading, data, error } = useQuery(QUERY(query));\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <Page breadcrumb=\"/\">\r\n      <h1>{query.id}</h1>\r\n      <h1>{query.id}</h1>\r\n    </Page>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}