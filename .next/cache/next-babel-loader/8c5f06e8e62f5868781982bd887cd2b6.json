{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    locations {\\n      results {\\n        type\\n        id\\n        name\\n        residents {\\n          image\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withApollo from \"../hooks/withApollo\";\nimport LocationItem from \"../components/LocationItem/LocationItem\";\nimport Page from \"../components/Page/Page\";\nimport Layout from \"../components/Layout/Layout\";\n\nvar QUERY = function QUERY() {\n  return gql(_templateObject());\n};\n\nvar Index = function Index() {\n  var _useQuery = useQuery(QUERY()),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  var renderPage = function renderPage() {\n    if (loading) {\n      return __jsx(\"img\", {\n        src: \"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      });\n    }\n\n    if (error) return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"error\");\n\n    if (data) {\n      console.log(data);\n      var results = data.locations.results;\n      return results.map(function (props) {\n        return __jsx(LocationItem, _extends({\n          key: props.id\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      });\n    }\n  };\n\n  return __jsx(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, renderPage()));\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/index.js"],"names":["gql","useQuery","withApollo","LocationItem","Page","Layout","QUERY","Index","loading","data","error","renderPage","console","log","results","locations","map","props","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMN,GAAN;AAAA,CAAd;;AAeA,IAAMO,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACeN,QAAQ,CAACK,KAAK,EAAN,CADvB;AAAA,MACVE,OADU,aACVA,OADU;AAAA,MACDC,IADC,aACDA,IADC;AAAA,MACKC,KADL,aACKA,KADL;;AAGlB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIH,OAAJ,EAAa;AACX,aACE;AAAK,QAAA,GAAG,EAAC,2EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;;AACD,QAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACX,QAAID,IAAJ,EAAU;AACRG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AADQ,UAGOK,OAHP,GAIJL,IAJI,CAGNM,SAHM,CAGOD,OAHP;AAKR,aAAOA,OAAO,CAACE,GAAR,CAAY,UAAAC,KAAK;AAAA,eAAI,MAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,KAAK,CAACC;AAAzB,WAAiCD,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OAAjB,CAAP;AACD;AACF,GAdD;;AAgBA,SACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASN,UAAU,EAAnB,CADF,CADF;AAKD,CAxBD;;AA0BA,eAAeT,UAAU,CAACK,KAAD,CAAzB","sourcesContent":["import gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport withApollo from \"../hooks/withApollo\";\r\n\r\nimport LocationItem from \"../components/LocationItem/LocationItem\";\r\nimport Page from \"../components/Page/Page\";\r\nimport Layout from \"../components/Layout/Layout\";\r\n\r\nconst QUERY = () => gql`\r\n  {\r\n    locations {\r\n      results {\r\n        type\r\n        id\r\n        name\r\n        residents {\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data, error } = useQuery(QUERY());\r\n\r\n  const renderPage = () => {\r\n    if (loading) {\r\n      return (\r\n        <img src=\"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\" />\r\n      );\r\n    }\r\n    if (error) return <h1>error</h1>;\r\n    if (data) {\r\n      console.log(data);\r\n      const {\r\n        locations: { results }\r\n      } = data;\r\n      return results.map(props => <LocationItem key={props.id} {...props} />);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page>\r\n      <Layout>{renderPage()}</Layout>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default withApollo(Index);\r\n"]},"metadata":{},"sourceType":"module"}