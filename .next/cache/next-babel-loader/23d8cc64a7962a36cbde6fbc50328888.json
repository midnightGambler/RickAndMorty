{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withApollo from \"../hooks/withApollo\";\nimport LocationItem from \"../components/LocationItem/LocationItem\";\nimport Page from \"../components/Page/Page\";\n\nconst QUERY = () => gql`\n  {\n    locations {\n      results {\n        type\n        id\n        name\n        residents {\n          image\n        }\n      }\n    }\n  }\n`;\n\nconst Index = () => {\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(QUERY());\n\n  const renderPage = () => {\n    return __jsx(\"img\", {\n      src: \"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }); // if (loading) {\n    //   return (\n    //     <img src=\"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\" />\n    //   );\n    // }\n    // if (error) return <h1>error</h1>;\n    // if (data) {\n    //   console.log(data);\n    //   const {\n    //     locations: { results }\n    //   } = data;\n    //   return results.map(props => <LocationItem key={props.id} {...props} />);\n    // }\n  };\n\n  return renderPage();\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/index.js"],"names":["gql","useQuery","withApollo","LocationItem","Page","QUERY","Index","loading","data","error","renderPage"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;;AAEA,MAAMC,KAAK,GAAG,MAAML,GAAI;;;;;;;;;;;;;CAAxB;;AAeA,MAAMM,KAAK,GAAG,MAAM;AAClB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BR,QAAQ,CAACI,KAAK,EAAN,CAAzC;;AAEA,QAAMK,UAAU,GAAG,MAAM;AACvB,WACE;AAAK,MAAA,GAAG,EAAC,2EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADuB,CAIvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAjBD;;AAmBA,SAAOA,UAAU,EAAjB;AACD,CAvBD;;AAyBA,eAAeR,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport withApollo from \"../hooks/withApollo\";\r\n\r\nimport LocationItem from \"../components/LocationItem/LocationItem\";\r\nimport Page from \"../components/Page/Page\";\r\n\r\nconst QUERY = () => gql`\r\n  {\r\n    locations {\r\n      results {\r\n        type\r\n        id\r\n        name\r\n        residents {\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data, error } = useQuery(QUERY());\r\n\r\n  const renderPage = () => {\r\n    return (\r\n      <img src=\"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\" />\r\n    );\r\n    // if (loading) {\r\n    //   return (\r\n    //     <img src=\"https://cdn.dribbble.com/users/1897588/screenshots/3887258/gif_export.gif\" />\r\n    //   );\r\n    // }\r\n    // if (error) return <h1>error</h1>;\r\n    // if (data) {\r\n    //   console.log(data);\r\n    //   const {\r\n    //     locations: { results }\r\n    //   } = data;\r\n    //   return results.map(props => <LocationItem key={props.id} {...props} />);\r\n    // }\r\n  };\r\n\r\n  return renderPage();\r\n};\r\n\r\nexport default withApollo(Index);\r\n"]},"metadata":{},"sourceType":"module"}