{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\resident\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Page from \"../../components/Page/Page\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ResidentInfo from \"../../components/ResidentInfo/ResidentInfo\";\n\nconst QUERY = query => gql`\n{\n  character(id: ${query}) {\n    image\n    name\n    type\n    location {\n      name\n      id\n    }\n    status\n    origin {\n      name\n    }\n  }\n}\n`;\n\nconst ResidentPage = () => {\n  const {\n    query\n  } = useRouter();\n  const {\n    loading,\n    data,\n    error\n  } = useQuery(QUERY(query.id));\n\n  const renderPage = () => {\n    if (loading) return __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    });\n    if (error) return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"error\");\n\n    if (data) {\n      const {\n        character\n      } = data;\n      console.log(character);\n      return __jsx(Page, {\n        breadcrumb: `/location/${character.location.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(ResidentInfo, {\n        character: character,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }));\n    }\n  };\n\n  return renderPage();\n};\n\nexport default ResidentPage;","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/resident/[id].js"],"names":["useRouter","useQuery","gql","Page","Loader","ResidentInfo","QUERY","query","ResidentPage","loading","data","error","id","renderPage","character","console","log","location"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,YAAP,MAAyB,4CAAzB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAIL,GAAI;;kBAETK,KAAM;;;;;;;;;;;;;;CAFxB;;AAkBA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM;AAAED,IAAAA;AAAF,MAAYP,SAAS,EAA3B;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,MAA2BV,QAAQ,CAACK,KAAK,CAACC,KAAK,CAACK,EAAP,CAAN,CAAzC;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACvB,QAAIJ,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACX,QAAID,IAAJ,EAAU;AACR,YAAM;AAAEI,QAAAA;AAAF,UAAgBJ,IAAtB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,aACE,MAAC,IAAD;AAAM,QAAA,UAAU,EAAG,aAAYA,SAAS,CAACG,QAAV,CAAmBL,EAAG,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,YAAD;AAAc,QAAA,SAAS,EAAEE,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAKD;AACF,GAZD;;AAcA,SAAOD,UAAU,EAAjB;AACD,CAnBD;;AAqBA,eAAeL,YAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ResidentInfo from \"../../components/ResidentInfo/ResidentInfo\";\r\n\r\nconst QUERY = query => gql`\r\n{\r\n  character(id: ${query}) {\r\n    image\r\n    name\r\n    type\r\n    location {\r\n      name\r\n      id\r\n    }\r\n    status\r\n    origin {\r\n      name\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ResidentPage = () => {\r\n  const { query } = useRouter();\r\n  const { loading, data, error } = useQuery(QUERY(query.id));\r\n\r\n  const renderPage = () => {\r\n    if (loading) return <Loader />;\r\n    if (error) return <h1>error</h1>;\r\n    if (data) {\r\n      const { character } = data;\r\n      console.log(character);\r\n      return (\r\n        <Page breadcrumb={`/location/${character.location.id}`}>\r\n          <ResidentInfo character={character} />\r\n        </Page>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderPage();\r\n};\r\n\r\nexport default ResidentPage;\r\n"]},"metadata":{},"sourceType":"module"}