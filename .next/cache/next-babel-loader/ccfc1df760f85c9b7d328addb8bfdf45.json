{"ast":null,"code":"import { useRef, useCallback, useEffect } from \"react\";\nexport default (fallbackSrc => {\n  const ref = useRef(null);\n  /**\r\n   * Error happened / catched after hydration\r\n   */\n\n  const onError = useCallback(e => {\n    e.target.src = fallbackSrc;\n  }, [fallbackSrc]);\n  /**\r\n   * Error happened before hydration, but catched after hydration\r\n   */\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const {\n        complete,\n        naturalHeight\n      } = ref.current;\n      const errorLoadingImgBeforeHydration = complete && naturalHeight === 0;\n\n      if (errorLoadingImgBeforeHydration) {\n        ref.current.src = fallbackSrc;\n      }\n    }\n  }, [fallbackSrc]);\n  return {\n    ref,\n    onError\n  };\n});","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/hooks/useFallback.js"],"names":["useRef","useCallback","useEffect","fallbackSrc","ref","onError","e","target","src","current","complete","naturalHeight","errorLoadingImgBeforeHydration"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,QAA+C,OAA/C;AAEA,gBAAeC,WAAW,IAAI;AAC5B,QAAMC,GAAG,GAAGJ,MAAM,CAAC,IAAD,CAAlB;AAEA;;;;AAGA,QAAMK,OAAO,GAAGJ,WAAW,CACzBK,CAAC,IAAI;AACHA,IAAAA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAeL,WAAf;AACD,GAHwB,EAIzB,CAACA,WAAD,CAJyB,CAA3B;AAOA;;;;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIE,GAAG,IAAIA,GAAG,CAACK,OAAf,EAAwB;AACtB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAA8BP,GAAG,CAACK,OAAxC;AACA,YAAMG,8BAA8B,GAAGF,QAAQ,IAAIC,aAAa,KAAK,CAArE;;AAEA,UAAIC,8BAAJ,EAAoC;AAClCR,QAAAA,GAAG,CAACK,OAAJ,CAAYD,GAAZ,GAAkBL,WAAlB;AACD;AACF;AACF,GATQ,EASN,CAACA,WAAD,CATM,CAAT;AAWA,SAAO;AACLC,IAAAA,GADK;AAELC,IAAAA;AAFK,GAAP;AAID,CA/BD","sourcesContent":["import { useRef, useCallback, useEffect } from \"react\";\r\n\r\nexport default fallbackSrc => {\r\n  const ref = useRef(null);\r\n\r\n  /**\r\n   * Error happened / catched after hydration\r\n   */\r\n  const onError = useCallback(\r\n    e => {\r\n      e.target.src = fallbackSrc;\r\n    },\r\n    [fallbackSrc]\r\n  );\r\n\r\n  /**\r\n   * Error happened before hydration, but catched after hydration\r\n   */\r\n  useEffect(() => {\r\n    if (ref && ref.current) {\r\n      const { complete, naturalHeight } = ref.current;\r\n      const errorLoadingImgBeforeHydration = complete && naturalHeight === 0;\r\n\r\n      if (errorLoadingImgBeforeHydration) {\r\n        ref.current.src = fallbackSrc;\r\n      }\r\n    }\r\n  }, [fallbackSrc]);\r\n\r\n  return {\r\n    ref,\r\n    onError\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}