{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query locations($page: Int) {\\n    locations(page: $page) {\\n      info {\\n        next\\n      }\\n      results {\\n        type\\n        id\\n        name\\n        residents {\\n          image\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport LocationItem from \"../components/LocationItem/LocationItem\";\nimport Page from \"../components/Page/Page\";\nimport Layout from \"../components/Layout/Layout\";\nimport Loader from \"../components/Loader/Loader\";\n\nvar QUERY = function QUERY() {\n  return gql(_templateObject());\n};\n\nvar Index = function Index() {\n  var _useQuery = useQuery(QUERY()),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error,\n      fetchMore = _useQuery.fetchMore;\n\n  var updateList = function updateList() {\n    return fetchMore({\n      variables: {\n        page: data.locations.info.next\n      },\n      updateQuery: function updateQuery(prev, _ref) {\n        var fetchMoreResult = _ref.fetchMoreResult;\n        if (!fetchMoreResult) return prev;\n        console.log(fetchMoreResult);\n        console.log(prev);\n        return _objectSpread({}, fetchMoreResult, {\n          results: [].concat(_toConsumableArray(prev.locations.results), _toConsumableArray(fetchMoreResult.locations.results))\n        });\n      }\n    });\n  };\n\n  var renderPage = function renderPage() {\n    if (loading) return __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    });\n    if (error) return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"error\");\n\n    if (data) {\n      console.log(data);\n      var results = data.locations.results;\n      return __jsx(React.Fragment, null, __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, results.map(function (props) {\n        return __jsx(LocationItem, _extends({\n          key: props.id\n        }, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      })), __jsx(\"button\", {\n        onClick: function onClick() {\n          return updateList();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Fetch more\"));\n    }\n  };\n\n  return __jsx(Page, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, renderPage());\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/index.js"],"names":["gql","useQuery","LocationItem","Page","Layout","Loader","QUERY","Index","loading","data","error","fetchMore","updateList","variables","page","locations","info","next","updateQuery","prev","fetchMoreResult","console","log","results","renderPage","map","props","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMN,GAAN;AAAA,CAAd;;AAkBA,IAAMO,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBAC0BN,QAAQ,CAACK,KAAK,EAAN,CADlC;AAAA,MACVE,OADU,aACVA,OADU;AAAA,MACDC,IADC,aACDA,IADC;AAAA,MACKC,KADL,aACKA,KADL;AAAA,MACYC,SADZ,aACYA,SADZ;;AAGlB,MAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,WACjBD,SAAS,CAAC;AACRE,MAAAA,SAAS,EAAE;AACTC,QAAAA,IAAI,EAAEL,IAAI,CAACM,SAAL,CAAeC,IAAf,CAAoBC;AADjB,OADH;AAIRC,MAAAA,WAAW,EAAE,qBAACC,IAAD,QAA+B;AAAA,YAAtBC,eAAsB,QAAtBA,eAAsB;AAC1C,YAAI,CAACA,eAAL,EAAsB,OAAOD,IAAP;AACtBE,QAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,iCACKC,eADL;AAEEG,UAAAA,OAAO,+BACFJ,IAAI,CAACJ,SAAL,CAAeQ,OADb,sBAEFH,eAAe,CAACL,SAAhB,CAA0BQ,OAFxB;AAFT;AAOD;AAfO,KAAD,CADQ;AAAA,GAAnB;;AAmBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIhB,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACX,QAAID,IAAJ,EAAU;AACRY,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AADQ,UAGOc,OAHP,GAIJd,IAJI,CAGNM,SAHM,CAGOQ,OAHP;AAKR,aACE,4BACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,OAAO,CAACE,GAAR,CAAY,UAAAC,KAAK;AAAA,eAChB,MAAC,YAAD;AAAc,UAAA,GAAG,EAAEA,KAAK,CAACC;AAAzB,WAAiCD,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADgB;AAAA,OAAjB,CADH,CADF,EAME;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMd,UAAU,EAAhB;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,CADF;AAUD;AACF,GAnBD;;AAqBA,SAAO,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOY,UAAU,EAAjB,CAAP;AACD,CA5CD;;AA8CA,eAAejB,KAAf","sourcesContent":["import gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport LocationItem from \"../components/LocationItem/LocationItem\";\r\nimport Page from \"../components/Page/Page\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport Loader from \"../components/Loader/Loader\";\r\n\r\nconst QUERY = () => gql`\r\n  query locations($page: Int) {\r\n    locations(page: $page) {\r\n      info {\r\n        next\r\n      }\r\n      results {\r\n        type\r\n        id\r\n        name\r\n        residents {\r\n          image\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data, error, fetchMore } = useQuery(QUERY());\r\n\r\n  const updateList = () =>\r\n    fetchMore({\r\n      variables: {\r\n        page: data.locations.info.next\r\n      },\r\n      updateQuery: (prev, { fetchMoreResult }) => {\r\n        if (!fetchMoreResult) return prev;\r\n        console.log(fetchMoreResult);\r\n        console.log(prev);\r\n        return {\r\n          ...fetchMoreResult,\r\n          results: [\r\n            ...prev.locations.results,\r\n            ...fetchMoreResult.locations.results\r\n          ]\r\n        };\r\n      }\r\n    });\r\n\r\n  const renderPage = () => {\r\n    if (loading) return <Loader />;\r\n    if (error) return <h1>error</h1>;\r\n    if (data) {\r\n      console.log(data);\r\n      const {\r\n        locations: { results }\r\n      } = data;\r\n      return (\r\n        <>\r\n          <Layout>\r\n            {results.map(props => (\r\n              <LocationItem key={props.id} {...props} />\r\n            ))}\r\n          </Layout>\r\n          <button onClick={() => updateList()}>Fetch more</button>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <Page>{renderPage()}</Page>;\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}