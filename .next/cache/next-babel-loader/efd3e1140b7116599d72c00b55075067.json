{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\nimport gql from \"graphql-tag\";\nimport \"../styles.css\";\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: \"https://rickandmortyapi.com/graphql\"\n});\nconst client = new ApolloClient({\n  cache,\n  link\n});\nclient.query({\n  query: gql`\n      {\n        locations {\n          results {\n            type\n            id\n            name\n            residents {\n              image\n            }\n          }\n        }\n      }\n    `\n}).then(result => console.log(result));\n\nconst App = ({\n  Component,\n  pageProps\n}) => __jsx(Component, _extends({}, pageProps, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}));\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/_app.js"],"names":["ApolloClient","InMemoryCache","HttpLink","gql","cache","link","uri","client","query","then","result","console","log","App","Component","pageProps"],"mappings":";;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,cAAtD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,eAAP;AAEA,MAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd;AACA,MAAMI,IAAI,GAAG,IAAIH,QAAJ,CAAa;AACxBI,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,MAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BI,EAAAA,KAD8B;AAE9BC,EAAAA;AAF8B,CAAjB,CAAf;AAKAE,MAAM,CACHC,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAI;;;;;;;;;;;;;;AADN,CADT,EAiBGM,IAjBH,CAiBQC,MAAM,IAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAjBlB;;AAmBA,MAAMG,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1C;;AAEA,eAAeF,GAAf","sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\r\nimport gql from \"graphql-tag\";\r\nimport \"../styles.css\";\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n  uri: \"https://rickandmortyapi.com/graphql\"\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      {\r\n        locations {\r\n          results {\r\n            type\r\n            id\r\n            name\r\n            residents {\r\n              image\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));\r\n\r\nconst App = ({ Component, pageProps }) => <Component {...pageProps} />;\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}