{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\_app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      {\\n        locations {\\n          results {\\n            type\\n            id\\n            name\\n            residents {\\n              image\\n            }\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\nimport gql from \"graphql-tag\";\nimport \"../styles.css\";\nvar cache = new InMemoryCache();\nvar link = new HttpLink({\n  uri: \"https://rickandmortyapi.com/graphql\"\n});\nvar client = new ApolloClient({\n  cache: cache,\n  link: link\n});\nclient.query({\n  query: gql(_templateObject())\n}).then(function (result) {\n  return console.log(result);\n});\n\nvar App = function App(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Component, _extends({}, pageProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/_app.js"],"names":["ApolloClient","InMemoryCache","HttpLink","gql","cache","link","uri","client","query","then","result","console","log","App","Component","pageProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,YAAT,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAsD,cAAtD;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,eAAP;AAEA,IAAMC,KAAK,GAAG,IAAIH,aAAJ,EAAd;AACA,IAAMI,IAAI,GAAG,IAAIH,QAAJ,CAAa;AACxBI,EAAAA,GAAG,EAAE;AADmB,CAAb,CAAb;AAIA,IAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BI,EAAAA,KAAK,EAALA,KAD8B;AAE9BC,EAAAA,IAAI,EAAJA;AAF8B,CAAjB,CAAf;AAKAE,MAAM,CACHC,KADH,CACS;AACLA,EAAAA,KAAK,EAAEL,GAAF;AADA,CADT,EAiBGM,IAjBH,CAiBQ,UAAAC,MAAM;AAAA,SAAIC,OAAO,CAACC,GAAR,CAAYF,MAAZ,CAAJ;AAAA,CAjBd;;AAmBA,IAAMG,GAAG,GAAG,SAANA,GAAM;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,SAAd,QAAcA,SAAd;AAAA,SAA8B,MAAC,SAAD,eAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA9B;AAAA,CAAZ;;AAEA,eAAeF,GAAf","sourcesContent":["import { ApolloClient, InMemoryCache, HttpLink } from \"apollo-boost\";\r\nimport gql from \"graphql-tag\";\r\nimport \"../styles.css\";\r\n\r\nconst cache = new InMemoryCache();\r\nconst link = new HttpLink({\r\n  uri: \"https://rickandmortyapi.com/graphql\"\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  cache,\r\n  link\r\n});\r\n\r\nclient\r\n  .query({\r\n    query: gql`\r\n      {\r\n        locations {\r\n          results {\r\n            type\r\n            id\r\n            name\r\n            residents {\r\n              image\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `\r\n  })\r\n  .then(result => console.log(result));\r\n\r\nconst App = ({ Component, pageProps }) => <Component {...pageProps} />;\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}