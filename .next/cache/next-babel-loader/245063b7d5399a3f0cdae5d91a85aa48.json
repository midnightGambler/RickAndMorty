{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    locations {\\n      results {\\n        type\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport withApollo from \"../hooks/withApollo\";\nimport LocationItem from \"../components/LocationItem/LocationItem\";\nimport Page from \"../components/Page/Page\";\nvar QUERY = gql(_templateObject());\n\nvar Index = function Index() {\n  var _useQuery = useQuery(QUERY),\n      loading = _useQuery.loading,\n      data = _useQuery.data;\n\n  if (loading || !data) {\n    return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, \"loading...\");\n  } else {\n    var results = data.locations.results;\n    console.log(data);\n    return __jsx(Page, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, results.map(function (_ref) {\n      var type = _ref.type,\n          id = _ref.id;\n      return __jsx(LocationItem, {\n        key: id,\n        type: type,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      });\n    }));\n  }\n};\n\nexport default withApollo(Index);","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/index.js"],"names":["gql","useQuery","withApollo","LocationItem","Page","QUERY","Index","loading","data","results","locations","console","log","map","type","id"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AAEA,IAAMC,KAAK,GAAGL,GAAH,mBAAX;;AAWA,IAAMM,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA,kBACQL,QAAQ,CAACI,KAAD,CADhB;AAAA,MACVE,OADU,aACVA,OADU;AAAA,MACDC,IADC,aACDA,IADC;;AAGlB,MAAID,OAAO,IAAI,CAACC,IAAhB,EAAsB;AACpB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,GAFD,MAEO;AAAA,QAEUC,OAFV,GAGDD,IAHC,CAEHE,SAFG,CAEUD,OAFV;AAILE,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,OAAO,CAACI,GAAR,CAAY;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,UAASC,EAAT,QAASA,EAAT;AAAA,aACX,MAAC,YAAD;AAAc,QAAA,GAAG,EAAEA,EAAnB;AAAuB,QAAA,IAAI,EAAED,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADW;AAAA,KAAZ,CADH,CADF;AAOD;AACF,CAlBD;;AAoBA,eAAeZ,UAAU,CAACI,KAAD,CAAzB","sourcesContent":["import gql from \"graphql-tag\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport withApollo from \"../hooks/withApollo\";\r\n\r\nimport LocationItem from \"../components/LocationItem/LocationItem\";\r\nimport Page from \"../components/Page/Page\";\r\n\r\nconst QUERY = gql`\r\n  {\r\n    locations {\r\n      results {\r\n        type\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Index = () => {\r\n  const { loading, data } = useQuery(QUERY);\r\n\r\n  if (loading || !data) {\r\n    return <h1>loading...</h1>;\r\n  } else {\r\n    const {\r\n      locations: { results }\r\n    } = data;\r\n    console.log(data);\r\n    return (\r\n      <Page>\r\n        {results.map(({ type, id }) => (\r\n          <LocationItem key={id} type={type} />\r\n        ))}\r\n      </Page>\r\n    );\r\n  }\r\n};\r\n\r\nexport default withApollo(Index);\r\n"]},"metadata":{},"sourceType":"module"}