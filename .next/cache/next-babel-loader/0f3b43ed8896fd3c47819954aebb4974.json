{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\ashur\\\\Desktop\\\\React\\\\RickAndMorty\\\\pages\\\\resident\\\\[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  character(id: \", \") {\\n    name\\n    location {\\n      name\\n      id\\n    }\\n    status\\n    origin {\\n      name\\n    }\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport Page from \"../../components/Page/Page\";\nimport Loader from \"../../components/Loader/Loader\";\n\nvar QUERY = function QUERY(query) {\n  return gql(_templateObject(), query);\n};\n\nvar ResidentPage = function ResidentPage() {\n  var _useRouter = useRouter(),\n      query = _useRouter.query;\n\n  var _useQuery = useQuery(QUERY(query.id)),\n      loading = _useQuery.loading,\n      data = _useQuery.data,\n      error = _useQuery.error;\n\n  var renderPage = function renderPage() {\n    if (loading) return __jsx(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    });\n    if (error) return __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"error\");\n\n    if (data) {\n      var id = data.character.location.id;\n      return __jsx(Page, {\n        breadcrumb: \"/location/\".concat(id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, data.name));\n    }\n  };\n\n  return renderPage();\n};\n\nexport default ResidentPage;","map":{"version":3,"sources":["C:/Users/ashur/Desktop/React/RickAndMorty/pages/resident/[id].js"],"names":["useRouter","useQuery","gql","Page","Loader","QUERY","query","ResidentPage","id","loading","data","error","renderPage","character","location","name"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAAIJ,GAAJ,oBAEDI,KAFC;AAAA,CAAnB;;AAgBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA,mBACPP,SAAS,EADF;AAAA,MACjBM,KADiB,cACjBA,KADiB;;AAAA,kBAEQL,QAAQ,CAACI,KAAK,CAACC,KAAK,CAACE,EAAP,CAAN,CAFhB;AAAA,MAEjBC,OAFiB,aAEjBA,OAFiB;AAAA,MAERC,IAFQ,aAERA,IAFQ;AAAA,MAEFC,KAFE,aAEFA,KAFE;;AAIzB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIH,OAAJ,EAAa,OAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACb,QAAIE,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;;AACX,QAAID,IAAJ,EAAU;AAAA,UAGQF,EAHR,GAKJE,IALI,CAENG,SAFM,CAGJC,QAHI,CAGQN,EAHR;AAMR,aACE,MAAC,IAAD;AAAM,QAAA,UAAU,sBAAeA,EAAf,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKE,IAAI,CAACK,IAAV,CADF,CADF;AAKD;AACF,GAfD;;AAiBA,SAAOH,UAAU,EAAjB;AACD,CAtBD;;AAwBA,eAAeL,YAAf","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\n\r\nconst QUERY = query => gql`\r\n{\r\n  character(id: ${query}) {\r\n    name\r\n    location {\r\n      name\r\n      id\r\n    }\r\n    status\r\n    origin {\r\n      name\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ResidentPage = () => {\r\n  const { query } = useRouter();\r\n  const { loading, data, error } = useQuery(QUERY(query.id));\r\n\r\n  const renderPage = () => {\r\n    if (loading) return <Loader />;\r\n    if (error) return <h1>error</h1>;\r\n    if (data) {\r\n      const {\r\n        character: {\r\n          location: { id }\r\n        }\r\n      } = data;\r\n      return (\r\n        <Page breadcrumb={`/location/${id}`}>\r\n          <h1>{data.name}</h1>\r\n        </Page>\r\n      );\r\n    }\r\n  };\r\n\r\n  return renderPage();\r\n};\r\n\r\nexport default ResidentPage;\r\n"]},"metadata":{},"sourceType":"module"}